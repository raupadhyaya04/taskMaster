# -*- coding: utf-8 -*-
"""
logic.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1j0X96COERbxNGOcM3nEVcOktppio1_Ah
"""
import pandas as pd

def insert_label(label, labelList):
  labelList.append(label)

def createLabelDict(labelList, importanceList):
  labelDict = dict(zip(labelList, importanceList))
  return labelDict

def rankLabels(labelList):
  newList = []

  while (len(labelList) != 1):
    for i in range(0, len(labelList)):
      print(str(i + 1) + ".", labelList[i])
      continue

    indexRemover = int(input("Choose the most important task from the list by the associated number: "))
    while ((indexRemover > len(labelList) + 1) or (indexRemover < 0)):
      print("invalid input, please try again")
      indexRemover = int(input("Choose the most important task from the list by the associated number: "))
      continue

    indexRemover -= 1
    newList.append(labelList[indexRemover])
    labelList.remove(labelList[indexRemover])
    continue

  if (len(labelList) == 1):
    newList.append(labelList[0])
    labelList.remove(labelList[0])

  newList.reverse()
  return newList

def insert_labelImportance(labelList):
  importanceList = []
  for i in range(len(labelList)):
    importanceList.append(i + 1)

  importanceList.reverse()
  labelList.reverse()
  return importanceList

def insertTask(task, taskList):
  taskList.append(task)

def insertLabels(label, labelsList):
  labelsList.append(label)

def calculateScore(importance, label, daysRemaining, labelDict):
  score = importance + labelDict[label] - daysRemaining
  return score

def insertScore(score, scoreList):
  scoreList.append(score)

def insertDaysRem(daysRem, daysRemList):
  daysRemList.append(daysRem)

def sortScoreList(scoreList):
  newScoreList = []
  while (len(scoreList) != 0):
    newScoreList.append(scoreList[scoreList.index(max(scoreList))])
    scoreList.remove(scoreList[scoreList.index(max(scoreList))])

def sortTaskList(scoreList, taskList):
  newTaskList = []
  while (len(scoreList) != 0):
    newTaskList.append(taskList[scoreList.index(max(scoreList))])
    scoreList.remove(scoreList[scoreList.index(max(scoreList))])
  return newTaskList

def sortLabelsList(scoreList, labelsList):
  newLabelsList = []
  while (len(scoreList) != 0):
    newLabelsList.append(labelsList[scoreList.index(max(scoreList))])
    scoreList.remove(scoreList[scoreList.index(max(scoreList))])

def sortDaysRemList(scoreList, daysRemList):
  newDaysRemList = []
  while (len(scoreList) != 0):
    newDaysRemList.append(daysRemList[scoreList.index(max(scoreList))])
    scoreList.remove(scoreList[scoreList.index(max(scoreList))])
  return newDaysRemList

def sortAllLists(scoreList, taskList, labelsList, daysRemList):

  testScoreList = scoreList.copy()
  taskList = sortTaskList(testScoreList, taskList)

  testScoreList = scoreList.copy()
  labelsList = sortLabelsList(testScoreList, labelsList)

  testScoreList = scoreList.copy()
  daysRemList = sortDaysRemList(testScoreList, daysRemList)

  testScoreList = scoreList.copy()
  scoreList = sortScoreList(testScoreList)

def createDf(listOfLists):
  df = pd.DataFrame(listOfLists).transpose()
  df.columns = ["Task", "Label", "Days Remaining", "Score"]
  return df

def createCSV(df):
  df.to_csv('df.csv', index=False)

# Label List
labelList = []

# Task Lists
taskList = []
labelsList = []
daysRemList = []
scoreList = []